module Main

from "./section.gr" include Section
from "./module.gr" include WasmModule
from "wasi/file" include File
from "result" include Result
from "bytes" include Bytes

let mod = WasmModule.make()

WasmModule.addType([> I32, I32], [> I32], mod)

let raw = WasmModule.marshal(mod)

print(Bytes.toString(raw))

//Todo: fix file writing
let fd = File.open("./result.wasm", [File.Create], [File.FdWrite], [File.FdWrite], [File.Append])

/**/
if(Result.isOk(fd)) {
    let writtenResult = File.fdWrite(Result.unwrap(fd), raw)

    match(writtenResult) {
        Ok(written) => ignore(written),
        Err(err) => print(err)
    }
}
else {
    print(fd)
}
*/
